body::before {
    display: block;
    content: " ";
    height: 60px;
}

#map {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

/* The breakpoint for medium is 768 */
@media(min-width: 768px) {
    .news-input {
        width: 50%;
    }
}

.yellowbg {
    background-color: #e9e800;
}

@font-face {
    font-family: sfpro;
    src: url('fonts/SF-Pro-Text-Medium.otf');
}

@font-face {
    font-family: suisse;
    src: url('fonts/SuisseWorks-Regular.ttf');
}

@font-face {
    font-family: sfprolight;
    src: url('fonts/SF-Pro-Text-Light.otf');
}

.myheading {
    font-family: suisse;
}

.mytext {
    font-family: sfpro;
    font-size: 17px;
}

.mybigtext {
    font-family: sfpro;
    font-size: 22px;    
}

.mylighttext {
    font-family: sfprolight;
    font-size: 17px;
}

.footer-text {
    font-family: sfprolight;
    font-size:14px;
    color: white;
    text-decoration: none;
}

.footer-text:hover {
    text-decoration: underline;
}

/* All the styles from here are for the boxes */
.button-glow {
  --glow-length: 20px;
  --glow-inner-color: #fff;
  --glow-inner-thickness: 2px;
  --glow-outer-color: #FCE22A;
  --glow-outer-size: 8px;
  --glow-offset: 0px;
  --animation-speed: 1200ms;
  --border-radius: 1.25rem;
  --svg-offset: 100px;
  cursor: pointer;
  font-size: 2rem;
  font-family: sfpro;
  font-weight: 700;
  color: #A084DC;
  background-color: #F7EFE5;
  padding: 0.75em 1.25em;
  border: 0;
  border-radius: var(--border-radius);
  position: relative;
}

.button-glow svg {
  position: absolute;
  inset: calc(var(--svg-offset) / -2);
  width: calc(100% + var(--svg-offset) + var(--glow-offset));
  height: calc(100% + var(--svg-offset) + var(--glow-offset));
  opacity: 0;
  pointer-events: none;
}

.glow,
.border {
  width: calc(100% - var(--svg-offset) + var(--glow-offset));
  height: calc(100% - var(--svg-offset) + var(--glow-offset));
  x: calc(var(--svg-offset) / 2 - (var(--glow-offset) / 2));
  y: calc(var(--svg-offset) / 2 - (var(--glow-offset) / 2));
  fill: transparent;
  rx: var(--border-radius);
  stroke-dasharray: var(--glow-length) calc(50px - var(--glow-length));
  stroke-dashoffset: 0;
}

.border {
  stroke-width: var(--glow-inner-thickness);
  stroke: var(--glow-inner-color);
}

.glow {
  stroke-width: var(--glow-outer-size);
  stroke: var(--glow-outer-color);
  filter: blur(var(--glow-outer-size));
}

.button-glow:is(:hover, :focus) svg {
  -webkit-animation: glow-visibility var(--animation-speed) ease-in-out forwards;
          animation: glow-visibility var(--animation-speed) ease-in-out forwards;
}

.button-glow:is(:hover, :focus) :is(.glow, .border) {
  -webkit-animation: glow-movement var(--animation-speed) ease-in forwards;
          animation: glow-movement var(--animation-speed) ease-in forwards;
}

@-webkit-keyframes glow-visibility {
  0%, 100% {
    opacity: 0;
  }
  25%, 40% {
    opacity: 1;
  }
}

@keyframes glow-visibility {
  0%, 100% {
    opacity: 0;
  }
  25%, 40% {
    opacity: 1;
  }
}
@-webkit-keyframes glow-movement {
  0% {
    stroke-dashoffset: 0px;
  }
  100% {
    stroke-dashoffset: -120px;
  }
}
@keyframes glow-movement {
  0% {
    stroke-dashoffset: 0px;
  }
  100% {
    stroke-dashoffset: -120px;
  }
}
.button-glow[data-style=offset] :is(.border, .glow) {
  --glow-offset: 10px;
}

.button-glow[data-style=no-move] :is(.border, .glow) {
  --glow-length: 50px;
}
